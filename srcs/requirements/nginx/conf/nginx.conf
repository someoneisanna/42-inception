# User will be www-data because it is the user that runs the php-fpm process
user www-data;

# The number of worker processes is set to auto, which means that the number of worker processes will be equal to the number of CPU cores
worker_processes auto;

# Events block is used to configure the connection processing model. Worker connections are the maximum number of simultaneous connections that can be opened by a worker process - 1024 is the default value.
events {
    worker_connections 1024;
}

# The http block is used to configure the HTTP server.
http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # The server block is used to configure the server. It is the main configuration block for the server.
    server {
        listen 443 ssl;                                                             # The listen directive is used to specify the port on which the server will listen. In this case, port 443.
        listen [::]:443 ssl;                                                        # This allows the server to listen on IPv6 addresses as well as IPv4 addresses.

        server_name localhost;                                                      # The server_name directive is used to specify the domain name or IP address that should match the server block.

        ssl_protocols TLSv1.2 TLSv1.3;                                              # The ssl_protocols directive is used to specify the SSL protocols that the server will accept.

        ssl_certificate /etc/nginx/cert.crt;                                        # Used to specify the path to the SSL certificate file.
        ssl_certificate_key /etc/nginx/cert.key;                                    # Used to specify the path to the SSL certificate key file.

        root /var/www/wordpress;                                                    # Used to specify what directory the server should look in to find files to serve.
        index index.php index.html;                                                 # Used to specify the default file that the server should look for in a directory.

        # The location block is used to configure how the server should respond to different URIs.
        location / {
            try_files $uri $uri/ /index.php?$args;                                 # The try_files directive is used to specify the files that the server should look for when a request is made.
        }

        # This location block is used to configure how the server should respond to requests for PHP files.
        location ~ \.php$ {
            fastcgi_pass wordpress:9000;                                           # This is the address of the FastCGI server that will process the PHP files.
            fastcgi_index index.php;                                               # This is the default file that the FastCGI server should look for.
            include fastcgi_params;                                                # This includes the fastcgi_params file, which contains a number of FastCGI configuration options.
            fastcgi_param SCRIPT_FILENAME /var/www/wordpress$fastcgi_script_name;  # This is the path to the PHP file that the FastCGI server should process.
            fastcgi_param PATH_INFO $fastcgi_path_info;                            # This is used to pass the PATH_INFO variable to the FastCGI server.
        }

        # This location block is used to configure how the server should respond to requests for static files.
        location ~* \.(jpg|jpeg|gif|css|png|js|ico|xml|svg|woff|woff2|ttf|eot)$ {
            try_files $uri =404;                                                   # This is used to specify the files that the server should look for when a request is made.
        }

        # This location block is used to configure how the server should respond to requests for the wp-admin directory.
        location /wp-admin {
            try_files $uri $uri/ /wp-admin/index.php?$args;                        # This is used to specify the files that the server should look for when a request is made.
        }
    }
}
